{"version":3,"sources":["components/IconTitle.tsx","components/ContactItem.tsx","components/ProfilePicture.tsx","components/PersonalSection.tsx","components/Division.tsx","components/Section.tsx","components/DetailsSection.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["IconTitle","props","react_default","a","createElement","className","text","toUpperCase","ContactItem","label","href","value","ProfilePicture","src","imgUrl","PersonalSection","_this$props$personalD","this","personalData","imageUrl","fullName","title","about","hobbies","contactItems","components_ProfilePicture","components_IconTitle","map","ci","components_ContactItem","key","Component","Division","startYear","endYear","position","company","children","Section","concat","extraClassName","DetailsSection","renderJobDescription","jobDescription","Array","isArray","line","_this2","_this$props$detailsDa","detailsData","experiences","skills","certificates","components_Section","exp","components_Division","Object","assign","s","cert","App","components_PersonalSection","cv_content","components_DetailsSection","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4e59bf2b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface OwnProps {\r\n\ttext: string;\r\n}\r\n\r\nconst IconTitle: React.FunctionComponent<OwnProps> = props => {\r\n\treturn (\r\n\t\t<div className={'section-main'}>\r\n\t\t\t<div className={'frame frame--small'}>\r\n\t\t\t\t<span>{props.text[0].toUpperCase()}</span>\r\n\t\t\t</div>\r\n\t\t\t<h3 className={'section-header'}>{props.text}</h3>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default IconTitle;\r\n","import React from 'react';\r\n\r\ninterface OwnProps {\r\n\tlabel: string;\r\n\tvalue: string;\r\n\thref?: string;\r\n}\r\n\r\nconst ContactItem: React.FunctionComponent<OwnProps> = props => {\r\n\treturn (\r\n\t\t<div className={'contact-item'}>\r\n\t\t\t<span>{props.label}</span>\r\n\t\t\t{props.href ? (\r\n\t\t\t\t<a href={props.href}>{props.value}</a>\r\n\t\t\t) : (\r\n\t\t\t\t<span>{props.value}</span>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from 'react';\r\n\r\ninterface OwnProps {\r\n\timgUrl: string;\r\n}\r\n\r\nconst ProfilePicture: React.FunctionComponent<OwnProps> = props => {\r\n\treturn (\r\n\t\t<div className={'info-picture'}>\r\n\t\t\t<div className={'frame'}>\r\n\t\t\t\t<div className={'photo-wrapper'}>\r\n\t\t\t\t\t<img className=\"photo\" src={props.imgUrl} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProfilePicture;\r\n","import React, { Component } from 'react';\r\nimport IconTitle from './IconTitle';\r\nimport ContactItem from './ContactItem';\r\nimport ProfilePicture from './ProfilePicture';\r\nimport { CvData } from '../models/CvData';\r\n\r\ninterface OwnProps {\r\n\tpersonalData: CvData;\r\n}\r\n\r\nclass PersonalSection extends Component<OwnProps> {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\timageUrl,\r\n\t\t\tfullName,\r\n\t\t\ttitle,\r\n\t\t\tabout,\r\n\t\t\thobbies,\r\n\t\t\tcontactItems,\r\n\t\t} = this.props.personalData;\r\n\t\treturn (\r\n\t\t\t<div className={'info'}>\r\n\t\t\t\t<ProfilePicture imgUrl={imageUrl} />\r\n\t\t\t\t<h1 className={'name'}>{fullName}</h1>\r\n\t\t\t\t<h2 className={'title'}>{title}</h2>\r\n\t\t\t\t<div className={'about'}>\r\n\t\t\t\t\t<IconTitle text=\"About Me\" />\r\n\t\t\t\t\t<p>{about}</p>\r\n\t\t\t\t\t<p>{hobbies}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={'contact'}>\r\n\t\t\t\t\t<IconTitle text=\"Contact\" />\r\n\t\t\t\t\t{contactItems.map(ci => (\r\n\t\t\t\t\t\t<ContactItem\r\n\t\t\t\t\t\t\tkey={ci.label}\r\n\t\t\t\t\t\t\tlabel={ci.label}\r\n\t\t\t\t\t\t\tvalue={ci.value}\r\n\t\t\t\t\t\t\thref={ci.href}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PersonalSection;\r\n","import React from 'react';\r\n\r\ninterface OwnProps {\r\n\tstartYear: string;\r\n\tendYear?: string;\r\n\tposition: string;\r\n\tcompany: string;\r\n}\r\n\r\nconst Division: React.FunctionComponent<OwnProps> = props => {\r\n\treturn (\r\n\t\t<div className={'division'}>\r\n\t\t\t<div className={'division-header'}>\r\n\t\t\t\t<div className={'division-main-date'}>\r\n\t\t\t\t\t{props.startYear} - {props.endYear}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={'division-main-position'}>\r\n\t\t\t\t\t<span>{props.position}</span>\r\n\t\t\t\t\t<span>{props.company}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{props.children}\r\n\t\t\t<p className={'division-content'} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Division;\r\n","import React from 'react';\r\nimport IconTitle from './IconTitle';\r\n\r\ninterface OwnProps {\r\n\ttitle: string;\r\n\textraClassName?: string;\r\n}\r\n\r\nconst Section: React.FunctionComponent<OwnProps> = props => {\r\n\treturn (\r\n\t\t<div className={`section ${props.extraClassName}`}>\r\n\t\t\t<IconTitle text={props.title} />\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\r\nimport Division from './Division';\r\nimport Section from './Section';\r\nimport { CvData } from '../models/CvData';\r\n\r\ninterface OwnProps {\r\n\tdetailsData: CvData;\r\n}\r\n\r\nclass DetailsSection extends Component<OwnProps> {\r\n\trenderJobDescription = (jobDescription: string[] | string) => {\r\n\t\tif (Array.isArray(jobDescription)) {\r\n\t\t\treturn (\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{jobDescription.map(line => (\r\n\t\t\t\t\t\t<li>{line}</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn <p>{jobDescription}</p>;\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { experiences, skills, certificates } = this.props.detailsData;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={'details'}>\r\n\t\t\t\t<Section title=\"Experiences\">\r\n\t\t\t\t\t{experiences.map(exp => (\r\n\t\t\t\t\t\t<Division key={exp.startYear} {...exp}>\r\n\t\t\t\t\t\t\t{this.renderJobDescription(exp.jobDescription)}\r\n\t\t\t\t\t\t</Division>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Section>\r\n\t\t\t\t<Section title=\"Workskills\" extraClassName=\"work-skills\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{skills.map(s => (\r\n\t\t\t\t\t\t\t<li>{s}</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</Section>\r\n\t\t\t\t<Section title=\"Certificates\">\r\n\t\t\t\t\t{certificates.map(cert => (\r\n\t\t\t\t\t\t<Division {...cert} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Section>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default DetailsSection;\r\n","import React, { Component } from 'react';\r\nimport PersonalSection from './components/PersonalSection';\r\nimport DetailsSection from './components/DetailsSection';\r\nimport './App.css';\r\nimport cv_content from './cv-content.json';\r\nimport { CvData } from './models/CvData';\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={'container'}>\r\n\t\t\t\t<PersonalSection personalData={cv_content as CvData} />\r\n\t\t\t\t<DetailsSection detailsData={cv_content as CvData} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}